{"ast":null,"code":"var _jsxFileName = \"/Users/roma_belyu/app-react/src/components/task/task.js\";\nimport React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport \"./task.css\";\nimport { el } from \"date-fns/locale\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Task extends React.Component {\n  constructor() {\n    super();\n    this.date = new Date();\n    this.state = {\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true\n      }),\n      status: false\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true\n      })\n    });\n  }\n\n  onInput(id) {\n    const currEl = document.getElementById(id);\n    currEl.classList.toggle(\"completed\");\n  }\n\n  render() {\n    const {\n      todos\n    } = this.props;\n    const {\n      status\n    } = this.state;\n    let className = \"\";\n\n    if (status) {\n      className = \"completed\";\n    }\n\n    const elements = todos.map(item => {\n      const {\n        id,\n        discription\n      } = item; // const style = {\n      //   display: edit ? \"block\" : \"none\",\n      // };\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: id,\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"toggle\",\n            type: \"checkbox\",\n            onClick: () => {\n              const currID = id;\n              this.onInput(id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"description\",\n              children: discription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"created\",\n              children: [\"created \", this.state.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon icon-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon icon-destroy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"edit\",\n          placeholder: \"Editing task\" // style={style}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    });\n    return elements;\n  }\n\n}\n\nexport default Task;","map":{"version":3,"names":["React","formatDistanceToNow","el","Task","Component","constructor","date","Date","state","time","includeSeconds","status","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","onInput","id","currEl","document","getElementById","classList","toggle","render","todos","props","className","elements","map","item","discription","currID"],"sources":["/Users/roma_belyu/app-react/src/components/task/task.js"],"sourcesContent":["import React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport \"./task.css\";\nimport { el } from \"date-fns/locale\";\nclass Task extends React.Component {\n  constructor() {\n    super();\n    this.date = new Date();\n    this.state = {\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true,\n      }),\n      status: false,\n    };\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true,\n      }),\n    });\n  }\n  onInput(id) {\n    const currEl = document.getElementById(id);\n    currEl.classList.toggle(\"completed\");\n  }\n  render() {\n    const { todos } = this.props;\n    const { status } = this.state;\n    let className = \"\";\n    if (status) {\n      className = \"completed\";\n    }\n    const elements = todos.map((item) => {\n      const { id, discription } = item;\n      // const style = {\n      //   display: edit ? \"block\" : \"none\",\n      // };\n      return (\n        <li id={id} className={className}>\n          <div className=\"view\">\n            <input\n              className=\"toggle\"\n              type=\"checkbox\"\n              onClick={() => {\n                const currID = id;\n                this.onInput(id);\n              }}\n            />\n            <label>\n              <span className=\"description\">{discription}</span>\n              <span className=\"created\">created {this.state.time}</span>\n            </label>\n            <button className=\"icon icon-edit\"></button>\n            <button className=\"icon icon-destroy\"></button>\n          </div>\n          <input\n            type=\"text\"\n            className=\"edit\"\n            placeholder=\"Editing task\"\n            // style={style}\n          ></input>\n        </li>\n      );\n    });\n\n    return elements;\n  }\n}\nexport default Task;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,OAAO,YAAP;AACA,SAASC,EAAT,QAAmB,iBAAnB;;;AACA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;EACjCC,WAAW,GAAG;IACZ;IACA,KAAKC,IAAL,GAAY,IAAIC,IAAJ,EAAZ;IACA,KAAKC,KAAL,GAAa;MACXC,IAAI,EAAER,mBAAmB,CAAC,KAAKK,IAAN,EAAY;QACnCI,cAAc,EAAE;MADmB,CAAZ,CADd;MAIXC,MAAM,EAAE;IAJG,CAAb;EAMD;;EACDC,iBAAiB,GAAG;IAClB,KAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAA1B;EACD;;EAEDC,oBAAoB,GAAG;IACrBC,aAAa,CAAC,KAAKJ,OAAN,CAAb;EACD;;EAEDE,IAAI,GAAG;IACL,KAAKG,QAAL,CAAc;MACZT,IAAI,EAAER,mBAAmB,CAAC,KAAKK,IAAN,EAAY;QACnCI,cAAc,EAAE;MADmB,CAAZ;IADb,CAAd;EAKD;;EACDS,OAAO,CAACC,EAAD,EAAK;IACV,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAf;IACAC,MAAM,CAACG,SAAP,CAAiBC,MAAjB,CAAwB,WAAxB;EACD;;EACDC,MAAM,GAAG;IACP,MAAM;MAAEC;IAAF,IAAY,KAAKC,KAAvB;IACA,MAAM;MAAEjB;IAAF,IAAa,KAAKH,KAAxB;IACA,IAAIqB,SAAS,GAAG,EAAhB;;IACA,IAAIlB,MAAJ,EAAY;MACVkB,SAAS,GAAG,WAAZ;IACD;;IACD,MAAMC,QAAQ,GAAGH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAU;MACnC,MAAM;QAAEZ,EAAF;QAAMa;MAAN,IAAsBD,IAA5B,CADmC,CAEnC;MACA;MACA;;MACA,oBACE;QAAI,EAAE,EAAEZ,EAAR;QAAY,SAAS,EAAES,SAAvB;QAAA,wBACE;UAAK,SAAS,EAAC,MAAf;UAAA,wBACE;YACE,SAAS,EAAC,QADZ;YAEE,IAAI,EAAC,UAFP;YAGE,OAAO,EAAE,MAAM;cACb,MAAMK,MAAM,GAAGd,EAAf;cACA,KAAKD,OAAL,CAAaC,EAAb;YACD;UANH;YAAA;YAAA;YAAA;UAAA,QADF,eASE;YAAA,wBACE;cAAM,SAAS,EAAC,aAAhB;cAAA,UAA+Ba;YAA/B;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAM,SAAS,EAAC,SAAhB;cAAA,uBAAmC,KAAKzB,KAAL,CAAWC,IAA9C;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QATF,eAaE;YAAQ,SAAS,EAAC;UAAlB;YAAA;YAAA;YAAA;UAAA,QAbF,eAcE;YAAQ,SAAS,EAAC;UAAlB;YAAA;YAAA;YAAA;UAAA,QAdF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAiBE;UACE,IAAI,EAAC,MADP;UAEE,SAAS,EAAC,MAFZ;UAGE,WAAW,EAAC,cAHd,CAIE;;QAJF;UAAA;UAAA;UAAA;QAAA,QAjBF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IA0BD,CA/BgB,CAAjB;IAiCA,OAAOqB,QAAP;EACD;;AAvEgC;;AAyEnC,eAAe3B,IAAf"},"metadata":{},"sourceType":"module"}