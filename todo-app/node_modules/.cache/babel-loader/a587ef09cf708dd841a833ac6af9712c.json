{"ast":null,"code":"var _jsxFileName = \"/Users/roma_belyu/app-react/src/components/task/task.js\";\nimport React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport \"./task.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Task extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.date = new Date();\n    this.state = {\n      complete: false,\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true\n      })\n    };\n\n    this.completeItem = () => {\n      this.setState(_ref => {\n        let {\n          complete\n        } = _ref;\n        return {\n          complete: !complete\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true\n      })\n    });\n  }\n\n  render() {\n    const {\n      discription,\n      onDelete,\n      completeItem,\n      complete\n    } = this.props;\n    const {\n      time\n    } = this.state;\n    let classNames = \"view\";\n\n    if (complete) {\n      classNames = \"completed\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classNames,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle\",\n        type: \"checkbox\",\n        onClick: this.completeItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\",\n          children: discription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"created\",\n          children: [\"created \", time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-destroy\",\n        onClick: onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Task;","map":{"version":3,"names":["React","formatDistanceToNow","Task","Component","date","Date","state","complete","time","includeSeconds","completeItem","setState","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","render","discription","onDelete","props","classNames"],"sources":["/Users/roma_belyu/app-react/src/components/task/task.js"],"sourcesContent":["import React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport \"./task.css\";\n\nclass Task extends React.Component {\n  date = new Date();\n  state = {\n    complete: false,\n    time: formatDistanceToNow(this.date, {\n      includeSeconds: true,\n    }),\n  };\n  completeItem = () => {\n    this.setState(({ complete }) => {\n      return {\n        complete: !complete,\n      };\n    });\n  };\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  tick() {\n    this.setState({\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true,\n      }),\n    });\n  }\n  render() {\n    const { discription, onDelete, completeItem, complete } = this.props;\n    const { time } = this.state;\n    let classNames = \"view\";\n    if (complete) {\n      classNames = \"completed\";\n    }\n    return (\n      <div className={classNames}>\n        <input className=\"toggle\" type=\"checkbox\" onClick={this.completeItem} />\n        <label>\n          <span className=\"description\">{discription}</span>\n          <span className=\"created\">created {time}</span>\n        </label>\n        <button className=\"icon icon-edit\"></button>\n        <button className=\"icon icon-destroy\" onClick={onDelete}></button>\n      </div>\n    );\n  }\n}\nexport default Task;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;EAAA;IAAA;IAAA,KACjCC,IADiC,GAC1B,IAAIC,IAAJ,EAD0B;IAAA,KAEjCC,KAFiC,GAEzB;MACNC,QAAQ,EAAE,KADJ;MAENC,IAAI,EAAEP,mBAAmB,CAAC,KAAKG,IAAN,EAAY;QACnCK,cAAc,EAAE;MADmB,CAAZ;IAFnB,CAFyB;;IAAA,KAQjCC,YARiC,GAQlB,MAAM;MACnB,KAAKC,QAAL,CAAc,QAAkB;QAAA,IAAjB;UAAEJ;QAAF,CAAiB;QAC9B,OAAO;UACLA,QAAQ,EAAE,CAACA;QADN,CAAP;MAGD,CAJD;IAKD,CAdgC;EAAA;;EAejCK,iBAAiB,GAAG;IAClB,KAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAA1B;EACD;;EACDC,oBAAoB,GAAG;IACrBC,aAAa,CAAC,KAAKJ,OAAN,CAAb;EACD;;EACDE,IAAI,GAAG;IACL,KAAKJ,QAAL,CAAc;MACZH,IAAI,EAAEP,mBAAmB,CAAC,KAAKG,IAAN,EAAY;QACnCK,cAAc,EAAE;MADmB,CAAZ;IADb,CAAd;EAKD;;EACDS,MAAM,GAAG;IACP,MAAM;MAAEC,WAAF;MAAeC,QAAf;MAAyBV,YAAzB;MAAuCH;IAAvC,IAAoD,KAAKc,KAA/D;IACA,MAAM;MAAEb;IAAF,IAAW,KAAKF,KAAtB;IACA,IAAIgB,UAAU,GAAG,MAAjB;;IACA,IAAIf,QAAJ,EAAc;MACZe,UAAU,GAAG,WAAb;IACD;;IACD,oBACE;MAAK,SAAS,EAAEA,UAAhB;MAAA,wBACE;QAAO,SAAS,EAAC,QAAjB;QAA0B,IAAI,EAAC,UAA/B;QAA0C,OAAO,EAAE,KAAKZ;MAAxD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,wBACE;UAAM,SAAS,EAAC,aAAhB;UAAA,UAA+BS;QAA/B;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAM,SAAS,EAAC,SAAhB;UAAA,uBAAmCX,IAAnC;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAME;QAAQ,SAAS,EAAC;MAAlB;QAAA;QAAA;QAAA;MAAA,QANF,eAOE;QAAQ,SAAS,EAAC,mBAAlB;QAAsC,OAAO,EAAEY;MAA/C;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAWD;;AA9CgC;;AAgDnC,eAAelB,IAAf"},"metadata":{},"sourceType":"module"}