{"ast":null,"code":"var _jsxFileName = \"/Users/roma_belyu/app-react/src/components/Task/Task.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDistanceToNow } from 'date-fns';\nimport './task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Task extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.date = new Date();\n    this.state = {\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true\n      })\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true\n      })\n    });\n  }\n\n  render() {\n    const {\n      discription,\n      onDelete,\n      completeItem,\n      editTask,\n      complete,\n      onSubmit,\n      setNewDiscription,\n      id,\n      editing\n    } = this.props;\n\n    if (editing) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          onChange: completeItem,\n          checked: complete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          onClick: completeItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"description\",\n            children: discription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"created\",\n            children: [\"created \", this.state.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-edit\",\n          onClick: editTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon icon-destroy\",\n          onClick: onDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-edit\",\n        onSubmit: e => onSubmit(e, id),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"edit\",\n          value: discription,\n          onChange: e => setNewDiscription(e, id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nTask.defaultProps = {\n  completeItem: () => {}\n};\nTask.propTypes = {\n  completeItem: PropTypes.func\n};\nexport default Task;","map":{"version":3,"names":["React","PropTypes","formatDistanceToNow","Task","Component","date","Date","state","time","includeSeconds","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","render","discription","onDelete","completeItem","editTask","complete","onSubmit","setNewDiscription","id","editing","props","e","defaultProps","propTypes","func"],"sources":["/Users/roma_belyu/app-react/src/components/Task/Task.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { formatDistanceToNow } from 'date-fns'\nimport './task.css'\n\nclass Task extends React.Component {\n  date = new Date()\n  state = {\n    time: formatDistanceToNow(this.date, {\n      includeSeconds: true,\n    }),\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000)\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID)\n  }\n  tick() {\n    this.setState({\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true,\n      }),\n    })\n  }\n  render() {\n    const { discription, onDelete, completeItem, editTask, complete, onSubmit, setNewDiscription, id, editing } = this.props\n    if (editing) {\n      return (\n        <div className=\"view\">\n          <input className=\"toggle\" type=\"checkbox\" onChange={completeItem} checked={complete} />\n          <label onClick={completeItem}>\n            <span className=\"description\">{discription}</span>\n            <span className=\"created\">created {this.state.time}</span>\n          </label>\n          <button className=\"icon icon-edit\" onClick={editTask}></button>\n          <button className=\"icon icon-destroy\" onClick={onDelete}></button>\n        </div>\n      )\n    } else {\n      return (\n        <form className=\"form-edit\" onSubmit={(e) => onSubmit(e, id)}>\n          <input type=\"text\" className=\"edit\" value={discription} onChange={(e) => setNewDiscription(e, id)}></input>\n        </form>\n      )\n    }\n  }\n  static defaultProps = {\n    completeItem: () => {},\n  }\n  static propTypes = {\n    completeItem: PropTypes.func,\n  }\n}\nexport default Task\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;EAAA;IAAA;IAAA,KACjCC,IADiC,GAC1B,IAAIC,IAAJ,EAD0B;IAAA,KAEjCC,KAFiC,GAEzB;MACNC,IAAI,EAAEN,mBAAmB,CAAC,KAAKG,IAAN,EAAY;QACnCI,cAAc,EAAE;MADmB,CAAZ;IADnB,CAFyB;EAAA;;EAOjCC,iBAAiB,GAAG;IAClB,KAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAA1B;EACD;;EACDC,oBAAoB,GAAG;IACrBC,aAAa,CAAC,KAAKJ,OAAN,CAAb;EACD;;EACDE,IAAI,GAAG;IACL,KAAKG,QAAL,CAAc;MACZR,IAAI,EAAEN,mBAAmB,CAAC,KAAKG,IAAN,EAAY;QACnCI,cAAc,EAAE;MADmB,CAAZ;IADb,CAAd;EAKD;;EACDQ,MAAM,GAAG;IACP,MAAM;MAAEC,WAAF;MAAeC,QAAf;MAAyBC,YAAzB;MAAuCC,QAAvC;MAAiDC,QAAjD;MAA2DC,QAA3D;MAAqEC,iBAArE;MAAwFC,EAAxF;MAA4FC;IAA5F,IAAwG,KAAKC,KAAnH;;IACA,IAAID,OAAJ,EAAa;MACX,oBACE;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE;UAAO,SAAS,EAAC,QAAjB;UAA0B,IAAI,EAAC,UAA/B;UAA0C,QAAQ,EAAEN,YAApD;UAAkE,OAAO,EAAEE;QAA3E;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,OAAO,EAAEF,YAAhB;UAAA,wBACE;YAAM,SAAS,EAAC,aAAhB;YAAA,UAA+BF;UAA/B;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAM,SAAS,EAAC,SAAhB;YAAA,uBAAmC,KAAKX,KAAL,CAAWC,IAA9C;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAME;UAAQ,SAAS,EAAC,gBAAlB;UAAmC,OAAO,EAAEa;QAA5C;UAAA;UAAA;UAAA;QAAA,QANF,eAOE;UAAQ,SAAS,EAAC,mBAAlB;UAAsC,OAAO,EAAEF;QAA/C;UAAA;UAAA;UAAA;QAAA,QAPF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAWD,CAZD,MAYO;MACL,oBACE;QAAM,SAAS,EAAC,WAAhB;QAA4B,QAAQ,EAAGS,CAAD,IAAOL,QAAQ,CAACK,CAAD,EAAIH,EAAJ,CAArD;QAAA,uBACE;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAC,MAA7B;UAAoC,KAAK,EAAEP,WAA3C;UAAwD,QAAQ,EAAGU,CAAD,IAAOJ,iBAAiB,CAACI,CAAD,EAAIH,EAAJ;QAA1F;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IAKD;EACF;;AAzCgC;;AAA7BtB,I,CA0CG0B,Y,GAAe;EACpBT,YAAY,EAAE,MAAM,CAAE;AADF,C;AA1ClBjB,I,CA6CG2B,S,GAAY;EACjBV,YAAY,EAAEnB,SAAS,CAAC8B;AADP,C;AAIrB,eAAe5B,IAAf"},"metadata":{},"sourceType":"module"}