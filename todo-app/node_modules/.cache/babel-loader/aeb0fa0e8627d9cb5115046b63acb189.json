{"ast":null,"code":"var _jsxFileName = \"/Users/roma_belyu/app-react/src/components/task-list/task-list.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from '../task';\nimport './task-list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TaskList extends React.Component {\n  render() {\n    const {\n      todos,\n      onDeleted,\n      completeItem,\n      editTask,\n      setNewDiscription,\n      onSubmit\n    } = this.props;\n    const elements = todos.map(item => {\n      const {\n        id,\n        discription,\n        complete,\n        filterComplete,\n        editing\n      } = item;\n      let classNames = '';\n\n      if (complete) {\n        classNames = 'completed';\n      }\n\n      if (filterComplete) {\n        classNames += ' hidden';\n      }\n\n      if (editing) {\n        classNames = 'editing';\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: id,\n        className: classNames,\n        children: [/*#__PURE__*/_jsxDEV(Task, {\n          discription: discription,\n          onDelete: () => onDeleted(id),\n          completeItem: () => completeItem(id),\n          editTask: () => editTask(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => onSubmit(e, id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"edit\",\n          value: discription,\n          onChange: e => setNewDiscription(e, id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nTaskList.defaultProps = {\n  onDeleted: () => {},\n  completeItem: () => {}\n};\nTaskList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDeleted: PropTypes.func,\n  completeItem: PropTypes.func\n};","map":{"version":3,"names":["React","PropTypes","Task","TaskList","Component","render","todos","onDeleted","completeItem","editTask","setNewDiscription","onSubmit","props","elements","map","item","id","discription","complete","filterComplete","editing","classNames","e","defaultProps","propTypes","arrayOf","object","isRequired","func"],"sources":["/Users/roma_belyu/app-react/src/components/task-list/task-list.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Task from '../task'\nimport './task-list.css'\nexport default class TaskList extends React.Component {\n  render() {\n    const { todos, onDeleted, completeItem, editTask, setNewDiscription, onSubmit } = this.props\n    const elements = todos.map((item) => {\n      const { id, discription, complete, filterComplete, editing } = item\n      let classNames = ''\n      if (complete) {\n        classNames = 'completed'\n      }\n      if (filterComplete) {\n        classNames += ' hidden'\n      }\n      if (editing) {\n        classNames = 'editing'\n      }\n      return (\n        <li key={id} id={id} className={classNames}>\n          <Task\n            discription={discription}\n            onDelete={() => onDeleted(id)}\n            completeItem={() => completeItem(id)}\n            editTask={() => editTask(id)}\n          />\n          <form onSubmit={(e) => onSubmit(e, id)}></form>\n          <input type=\"text\" className=\"edit\" value={discription} onChange={(e) => setNewDiscription(e, id)}></input>\n        </li>\n      )\n    })\n    return <ul className=\"todo-list\">{elements}</ul>\n  }\n  static defaultProps = {\n    onDeleted: () => {},\n    completeItem: () => {},\n  }\n  static propTypes = {\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDeleted: PropTypes.func,\n    completeItem: PropTypes.func,\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,iBAAP;;AACA,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;EACpDC,MAAM,GAAG;IACP,MAAM;MAAEC,KAAF;MAASC,SAAT;MAAoBC,YAApB;MAAkCC,QAAlC;MAA4CC,iBAA5C;MAA+DC;IAA/D,IAA4E,KAAKC,KAAvF;IACA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAU;MACnC,MAAM;QAAEC,EAAF;QAAMC,WAAN;QAAmBC,QAAnB;QAA6BC,cAA7B;QAA6CC;MAA7C,IAAyDL,IAA/D;MACA,IAAIM,UAAU,GAAG,EAAjB;;MACA,IAAIH,QAAJ,EAAc;QACZG,UAAU,GAAG,WAAb;MACD;;MACD,IAAIF,cAAJ,EAAoB;QAClBE,UAAU,IAAI,SAAd;MACD;;MACD,IAAID,OAAJ,EAAa;QACXC,UAAU,GAAG,SAAb;MACD;;MACD,oBACE;QAAa,EAAE,EAAEL,EAAjB;QAAqB,SAAS,EAAEK,UAAhC;QAAA,wBACE,QAAC,IAAD;UACE,WAAW,EAAEJ,WADf;UAEE,QAAQ,EAAE,MAAMV,SAAS,CAACS,EAAD,CAF3B;UAGE,YAAY,EAAE,MAAMR,YAAY,CAACQ,EAAD,CAHlC;UAIE,QAAQ,EAAE,MAAMP,QAAQ,CAACO,EAAD;QAJ1B;UAAA;UAAA;UAAA;QAAA,QADF,eAOE;UAAM,QAAQ,EAAGM,CAAD,IAAOX,QAAQ,CAACW,CAAD,EAAIN,EAAJ;QAA/B;UAAA;UAAA;UAAA;QAAA,QAPF,eAQE;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAC,MAA7B;UAAoC,KAAK,EAAEC,WAA3C;UAAwD,QAAQ,EAAGK,CAAD,IAAOZ,iBAAiB,CAACY,CAAD,EAAIN,EAAJ;QAA1F;UAAA;UAAA;UAAA;QAAA,QARF;MAAA,GAASA,EAAT;QAAA;QAAA;QAAA;MAAA,QADF;IAYD,CAxBgB,CAAjB;IAyBA,oBAAO;MAAI,SAAS,EAAC,WAAd;MAAA,UAA2BH;IAA3B;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;AA7BmD;AAAjCV,Q,CA8BZoB,Y,GAAe;EACpBhB,SAAS,EAAE,MAAM,CAAE,CADC;EAEpBC,YAAY,EAAE,MAAM,CAAE;AAFF,C;AA9BHL,Q,CAkCZqB,S,GAAY;EACjBlB,KAAK,EAAEL,SAAS,CAACwB,OAAV,CAAkBxB,SAAS,CAACyB,MAA5B,EAAoCC,UAD1B;EAEjBpB,SAAS,EAAEN,SAAS,CAAC2B,IAFJ;EAGjBpB,YAAY,EAAEP,SAAS,CAAC2B;AAHP,C"},"metadata":{},"sourceType":"module"}