{"ast":null,"code":"var _jsxFileName = \"/Users/roma_belyu/app-react/src/components/task/task.js\";\nimport React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport \"./task.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Task extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.date = new Date();\n    this.state = {\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true\n      })\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true\n      })\n    });\n  }\n\n  render() {\n    const {\n      discription,\n      onDelete,\n      completeItem\n    } = this.props;\n    const {\n      time\n    } = this.state; // let classNames = \"view\";\n    // if (complete) {\n    //   classNames = \"completed\";\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"toggle\",\n        className: \"toggle\",\n        type: \"checkbox\",\n        onClick: completeItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\",\n          children: discription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"created\",\n          children: [\"created \", time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-destroy\",\n        onClick: onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Task;","map":{"version":3,"names":["React","formatDistanceToNow","Task","Component","date","Date","state","time","includeSeconds","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","render","discription","onDelete","completeItem","props"],"sources":["/Users/roma_belyu/app-react/src/components/task/task.js"],"sourcesContent":["import React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport \"./task.css\";\n\nclass Task extends React.Component {\n  date = new Date();\n  state = {\n    time: formatDistanceToNow(this.date, {\n      includeSeconds: true,\n    }),\n  };\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  tick() {\n    this.setState({\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true,\n      }),\n    });\n  }\n  render() {\n    const { discription, onDelete, completeItem } = this.props;\n    const { time } = this.state;\n    // let classNames = \"view\";\n    // if (complete) {\n    //   classNames = \"completed\";\n    // }\n    return (\n      <div className=\"view\">\n        <input\n          id={\"toggle\"}\n          className=\"toggle\"\n          type=\"checkbox\"\n          onClick={completeItem}\n        />\n        <label>\n          <span className=\"description\">{discription}</span>\n          <span className=\"created\">created {time}</span>\n        </label>\n        <button className=\"icon icon-edit\"></button>\n        <button className=\"icon icon-destroy\" onClick={onDelete}></button>\n      </div>\n    );\n  }\n}\nexport default Task;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAmC;EAAA;IAAA;IAAA,KACjCC,IADiC,GAC1B,IAAIC,IAAJ,EAD0B;IAAA,KAEjCC,KAFiC,GAEzB;MACNC,IAAI,EAAEN,mBAAmB,CAAC,KAAKG,IAAN,EAAY;QACnCI,cAAc,EAAE;MADmB,CAAZ;IADnB,CAFyB;EAAA;;EAOjCC,iBAAiB,GAAG;IAClB,KAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAA1B;EACD;;EACDC,oBAAoB,GAAG;IACrBC,aAAa,CAAC,KAAKJ,OAAN,CAAb;EACD;;EACDE,IAAI,GAAG;IACL,KAAKG,QAAL,CAAc;MACZR,IAAI,EAAEN,mBAAmB,CAAC,KAAKG,IAAN,EAAY;QACnCI,cAAc,EAAE;MADmB,CAAZ;IADb,CAAd;EAKD;;EACDQ,MAAM,GAAG;IACP,MAAM;MAAEC,WAAF;MAAeC,QAAf;MAAyBC;IAAzB,IAA0C,KAAKC,KAArD;IACA,MAAM;MAAEb;IAAF,IAAW,KAAKD,KAAtB,CAFO,CAGP;IACA;IACA;IACA;;IACA,oBACE;MAAK,SAAS,EAAC,MAAf;MAAA,wBACE;QACE,EAAE,EAAE,QADN;QAEE,SAAS,EAAC,QAFZ;QAGE,IAAI,EAAC,UAHP;QAIE,OAAO,EAAEa;MAJX;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QAAA,wBACE;UAAM,SAAS,EAAC,aAAhB;UAAA,UAA+BF;QAA/B;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAM,SAAS,EAAC,SAAhB;UAAA,uBAAmCV,IAAnC;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF,eAWE;QAAQ,SAAS,EAAC;MAAlB;QAAA;QAAA;QAAA;MAAA,QAXF,eAYE;QAAQ,SAAS,EAAC,mBAAlB;QAAsC,OAAO,EAAEW;MAA/C;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAgBD;;AA3CgC;;AA6CnC,eAAehB,IAAf"},"metadata":{},"sourceType":"module"}