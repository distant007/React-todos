{"ast":null,"code":"var _jsxFileName = \"/Users/roma_belyu/app-react/src/components/task-list/task-list.js\";\nimport React from \"react\";\nimport Task from \"../task\";\nimport \"./task-list.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TaskList extends React.Component {\n  render() {\n    const {\n      todos,\n      onDeleted,\n      completeItem\n    } = this.props;\n    const elements = todos.map(item => {\n      const {\n        id,\n        discription,\n        complete,\n        filterComplete\n      } = item;\n      let classNames = \"\";\n\n      if (complete) {\n        classNames = \"completed\";\n      }\n\n      if (filterComplete) {}\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: id,\n        className: classNames,\n        style: display = \"none\",\n        children: /*#__PURE__*/_jsxDEV(Task, {\n          discription: discription // complete={complete}\n          ,\n          onDelete: () => onDeleted(id),\n          completeItem: () => completeItem(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Task","TaskList","Component","render","todos","onDeleted","completeItem","props","elements","map","item","id","discription","complete","filterComplete","classNames","display"],"sources":["/Users/roma_belyu/app-react/src/components/task-list/task-list.js"],"sourcesContent":["import React from \"react\";\nimport Task from \"../task\";\nimport \"./task-list.css\";\nexport default class TaskList extends React.Component {\n  render() {\n    const { todos, onDeleted, completeItem } = this.props;\n    const elements = todos.map((item) => {\n      const { id, discription, complete, filterComplete } = item;\n      let classNames = \"\";\n      if (complete) {\n        classNames = \"completed\";\n      }\n      if (filterComplete) {\n      }\n      return (\n        <li key={id} id={id} className={classNames} style={(display = \"none\")}>\n          <Task\n            discription={discription}\n            // complete={complete}\n            onDelete={() => onDeleted(id)}\n            completeItem={() => completeItem(id)}\n          />\n        </li>\n      );\n    });\n    return <ul className=\"todo-list\">{elements}</ul>;\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,iBAAP;;AACA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;EACpDC,MAAM,GAAG;IACP,MAAM;MAAEC,KAAF;MAASC,SAAT;MAAoBC;IAApB,IAAqC,KAAKC,KAAhD;IACA,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;MACnC,MAAM;QAAEC,EAAF;QAAMC,WAAN;QAAmBC,QAAnB;QAA6BC;MAA7B,IAAgDJ,IAAtD;MACA,IAAIK,UAAU,GAAG,EAAjB;;MACA,IAAIF,QAAJ,EAAc;QACZE,UAAU,GAAG,WAAb;MACD;;MACD,IAAID,cAAJ,EAAoB,CACnB;;MACD,oBACE;QAAa,EAAE,EAAEH,EAAjB;QAAqB,SAAS,EAAEI,UAAhC;QAA4C,KAAK,EAAGC,OAAO,GAAG,MAA9D;QAAA,uBACE,QAAC,IAAD;UACE,WAAW,EAAEJ,WADf,CAEE;UAFF;UAGE,QAAQ,EAAE,MAAMP,SAAS,CAACM,EAAD,CAH3B;UAIE,YAAY,EAAE,MAAML,YAAY,CAACK,EAAD;QAJlC;UAAA;UAAA;UAAA;QAAA;MADF,GAASA,EAAT;QAAA;QAAA;QAAA;MAAA,QADF;IAUD,CAlBgB,CAAjB;IAmBA,oBAAO;MAAI,SAAS,EAAC,WAAd;MAAA,UAA2BH;IAA3B;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;AAvBmD"},"metadata":{},"sourceType":"module"}