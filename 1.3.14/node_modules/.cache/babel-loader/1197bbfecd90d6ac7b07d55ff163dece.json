{"ast":null,"code":"var _jsxFileName = \"/Users/roma_belyu/app-react/src/components/task/task.js\";\nimport React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport \"./task.css\";\nimport { el } from \"date-fns/locale\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Task extends React.Component {\n  constructor() {\n    super();\n    this.date = new Date();\n    this.state = {\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true\n      })\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true\n      })\n    });\n  }\n\n  onInput(id) {\n    const currEl = document.getElementById(id);\n    currEl.classList.toggle(\"completed\");\n  }\n\n  buttonEdit(id) {\n    const currEl = document.getElementById(id);\n    currEl.classList.toggle(\"editing\");\n  }\n\n  render() {\n    const {\n      todos,\n      onDelete\n    } = this.props;\n    const elements = todos.map(item => {\n      const {\n        id,\n        discription\n      } = item;\n      const style = {\n        display: \"none\"\n      };\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: id,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"toggle\",\n            type: \"checkbox\",\n            onClick: () => {\n              this.onInput(id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"description\",\n              children: discription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"created\",\n              children: [\"created \", this.state.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon icon-edit\",\n            onClick: () => {\n              this.buttonEdit(id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"icon icon-destroy\",\n            onClick: onDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"edit\",\n          value: \"Editing task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    });\n    return elements;\n  }\n\n}\n\nexport default Task;","map":{"version":3,"names":["React","formatDistanceToNow","el","Task","Component","constructor","date","Date","state","time","includeSeconds","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","onInput","id","currEl","document","getElementById","classList","toggle","buttonEdit","render","todos","onDelete","props","elements","map","item","discription","style","display"],"sources":["/Users/roma_belyu/app-react/src/components/task/task.js"],"sourcesContent":["import React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport \"./task.css\";\nimport { el } from \"date-fns/locale\";\nclass Task extends React.Component {\n  constructor() {\n    super();\n    this.date = new Date();\n    this.state = {\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true,\n      }),\n    };\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      time: formatDistanceToNow(this.date, {\n        includeSeconds: true,\n      }),\n    });\n  }\n  onInput(id) {\n    const currEl = document.getElementById(id);\n    currEl.classList.toggle(\"completed\");\n  }\n  buttonEdit(id) {\n    const currEl = document.getElementById(id);\n    currEl.classList.toggle(\"editing\");\n  }\n  render() {\n    const { todos, onDelete } = this.props;\n\n    const elements = todos.map((item) => {\n      const { id, discription } = item;\n      const style = {\n        display: \"none\",\n      };\n      return (\n        <li id={id}>\n          <div className=\"view\">\n            <input\n              className=\"toggle\"\n              type=\"checkbox\"\n              onClick={() => {\n                this.onInput(id);\n              }}\n            />\n            <label>\n              <span className=\"description\">{discription}</span>\n              <span className=\"created\">created {this.state.time}</span>\n            </label>\n            <button\n              className=\"icon icon-edit\"\n              onClick={() => {\n                this.buttonEdit(id);\n              }}\n            ></button>\n            <button className=\"icon icon-destroy\" onClick={onDelete}></button>\n          </div>\n          <input type=\"text\" className=\"edit\" value=\"Editing task\"></input>\n        </li>\n      );\n    });\n\n    return elements;\n  }\n}\nexport default Task;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,UAApC;AACA,OAAO,YAAP;AACA,SAASC,EAAT,QAAmB,iBAAnB;;;AACA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;EACjCC,WAAW,GAAG;IACZ;IACA,KAAKC,IAAL,GAAY,IAAIC,IAAJ,EAAZ;IACA,KAAKC,KAAL,GAAa;MACXC,IAAI,EAAER,mBAAmB,CAAC,KAAKK,IAAN,EAAY;QACnCI,cAAc,EAAE;MADmB,CAAZ;IADd,CAAb;EAKD;;EACDC,iBAAiB,GAAG;IAClB,KAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAA1B;EACD;;EAEDC,oBAAoB,GAAG;IACrBC,aAAa,CAAC,KAAKJ,OAAN,CAAb;EACD;;EAEDE,IAAI,GAAG;IACL,KAAKG,QAAL,CAAc;MACZR,IAAI,EAAER,mBAAmB,CAAC,KAAKK,IAAN,EAAY;QACnCI,cAAc,EAAE;MADmB,CAAZ;IADb,CAAd;EAKD;;EACDQ,OAAO,CAACC,EAAD,EAAK;IACV,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAf;IACAC,MAAM,CAACG,SAAP,CAAiBC,MAAjB,CAAwB,WAAxB;EACD;;EACDC,UAAU,CAACN,EAAD,EAAK;IACb,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAf;IACAC,MAAM,CAACG,SAAP,CAAiBC,MAAjB,CAAwB,SAAxB;EACD;;EACDE,MAAM,GAAG;IACP,MAAM;MAAEC,KAAF;MAASC;IAAT,IAAsB,KAAKC,KAAjC;IAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAU;MACnC,MAAM;QAAEb,EAAF;QAAMc;MAAN,IAAsBD,IAA5B;MACA,MAAME,KAAK,GAAG;QACZC,OAAO,EAAE;MADG,CAAd;MAGA,oBACE;QAAI,EAAE,EAAEhB,EAAR;QAAA,wBACE;UAAK,SAAS,EAAC,MAAf;UAAA,wBACE;YACE,SAAS,EAAC,QADZ;YAEE,IAAI,EAAC,UAFP;YAGE,OAAO,EAAE,MAAM;cACb,KAAKD,OAAL,CAAaC,EAAb;YACD;UALH;YAAA;YAAA;YAAA;UAAA,QADF,eAQE;YAAA,wBACE;cAAM,SAAS,EAAC,aAAhB;cAAA,UAA+Bc;YAA/B;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAM,SAAS,EAAC,SAAhB;cAAA,uBAAmC,KAAKzB,KAAL,CAAWC,IAA9C;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QARF,eAYE;YACE,SAAS,EAAC,gBADZ;YAEE,OAAO,EAAE,MAAM;cACb,KAAKgB,UAAL,CAAgBN,EAAhB;YACD;UAJH;YAAA;YAAA;YAAA;UAAA,QAZF,eAkBE;YAAQ,SAAS,EAAC,mBAAlB;YAAsC,OAAO,EAAES;UAA/C;YAAA;YAAA;YAAA;UAAA,QAlBF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAqBE;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAC,MAA7B;UAAoC,KAAK,EAAC;QAA1C;UAAA;UAAA;UAAA;QAAA,QArBF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAyBD,CA9BgB,CAAjB;IAgCA,OAAOE,QAAP;EACD;;AArEgC;;AAuEnC,eAAe3B,IAAf"},"metadata":{},"sourceType":"module"}