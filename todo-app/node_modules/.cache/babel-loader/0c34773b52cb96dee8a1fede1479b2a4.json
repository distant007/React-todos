{"ast":null,"code":"var _jsxFileName = \"/Users/roma_belyu/app-react/src/components/Task-list/Task-list.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from '../Task';\nimport './task-list.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TaskList extends React.Component {\n  render() {\n    const {\n      todos,\n      onDeleted,\n      completeItem,\n      editTask,\n      setNewDiscription,\n      onSubmit\n    } = this.props;\n    const elements = todos.map(item => {\n      const {\n        id,\n        discription,\n        complete,\n        editing\n      } = item;\n      let classNames = '';\n\n      if (complete) {\n        classNames = 'completed';\n      }\n\n      if (editing) {\n        classNames = 'editing';\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        id: id,\n        className: classNames,\n        children: [/*#__PURE__*/_jsxDEV(Task, {\n          discription: discription,\n          complete: complete,\n          onDelete: () => onDeleted(id),\n          completeItem: () => completeItem(id),\n          editTask: () => editTask(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-edit\",\n          onSubmit: e => onSubmit(e, id),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"edit\",\n            value: discription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nTaskList.defaultProps = {\n  onDeleted: () => {},\n  completeItem: () => {}\n};\nTaskList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDeleted: PropTypes.func,\n  completeItem: PropTypes.func\n};","map":{"version":3,"names":["React","PropTypes","Task","TaskList","Component","render","todos","onDeleted","completeItem","editTask","setNewDiscription","onSubmit","props","elements","map","item","id","discription","complete","editing","classNames","e","defaultProps","propTypes","arrayOf","object","isRequired","func"],"sources":["/Users/roma_belyu/app-react/src/components/Task-list/Task-list.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Task from '../Task'\nimport './task-list.css'\nexport default class TaskList extends React.Component {\n  render() {\n    const { todos, onDeleted, completeItem, editTask, setNewDiscription, onSubmit } = this.props\n    const elements = todos.map((item) => {\n      const { id, discription, complete, editing } = item\n      let classNames = ''\n      if (complete) {\n        classNames = 'completed'\n      }\n      if (editing) {\n        classNames = 'editing'\n      }\n      return (\n        <li key={id} id={id} className={classNames}>\n          <Task\n            discription={discription}\n            complete={complete}\n            onDelete={() => onDeleted(id)}\n            completeItem={() => completeItem(id)}\n            editTask={() => editTask(id)}\n          />\n          <form className=\"form-edit\" onSubmit={(e) => onSubmit(e, id)}>\n            <input type=\"text\" className=\"edit\" value={discription}></input>\n          </form>\n        </li>\n      )\n    })\n    return <ul className=\"todo-list\">{elements}</ul>\n  }\n  static defaultProps = {\n    onDeleted: () => {},\n    completeItem: () => {},\n  }\n  static propTypes = {\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDeleted: PropTypes.func,\n    completeItem: PropTypes.func,\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,iBAAP;;AACA,eAAe,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;EACpDC,MAAM,GAAG;IACP,MAAM;MAAEC,KAAF;MAASC,SAAT;MAAoBC,YAApB;MAAkCC,QAAlC;MAA4CC,iBAA5C;MAA+DC;IAA/D,IAA4E,KAAKC,KAAvF;IACA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAU;MACnC,MAAM;QAAEC,EAAF;QAAMC,WAAN;QAAmBC,QAAnB;QAA6BC;MAA7B,IAAyCJ,IAA/C;MACA,IAAIK,UAAU,GAAG,EAAjB;;MACA,IAAIF,QAAJ,EAAc;QACZE,UAAU,GAAG,WAAb;MACD;;MACD,IAAID,OAAJ,EAAa;QACXC,UAAU,GAAG,SAAb;MACD;;MACD,oBACE;QAAa,EAAE,EAAEJ,EAAjB;QAAqB,SAAS,EAAEI,UAAhC;QAAA,wBACE,QAAC,IAAD;UACE,WAAW,EAAEH,WADf;UAEE,QAAQ,EAAEC,QAFZ;UAGE,QAAQ,EAAE,MAAMX,SAAS,CAACS,EAAD,CAH3B;UAIE,YAAY,EAAE,MAAMR,YAAY,CAACQ,EAAD,CAJlC;UAKE,QAAQ,EAAE,MAAMP,QAAQ,CAACO,EAAD;QAL1B;UAAA;UAAA;UAAA;QAAA,QADF,eAQE;UAAM,SAAS,EAAC,WAAhB;UAA4B,QAAQ,EAAGK,CAAD,IAAOV,QAAQ,CAACU,CAAD,EAAIL,EAAJ,CAArD;UAAA,uBACE;YAAO,IAAI,EAAC,MAAZ;YAAmB,SAAS,EAAC,MAA7B;YAAoC,KAAK,EAAEC;UAA3C;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QARF;MAAA,GAASD,EAAT;QAAA;QAAA;QAAA;MAAA,QADF;IAcD,CAvBgB,CAAjB;IAwBA,oBAAO;MAAI,SAAS,EAAC,WAAd;MAAA,UAA2BH;IAA3B;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;AA5BmD;AAAjCV,Q,CA6BZmB,Y,GAAe;EACpBf,SAAS,EAAE,MAAM,CAAE,CADC;EAEpBC,YAAY,EAAE,MAAM,CAAE;AAFF,C;AA7BHL,Q,CAiCZoB,S,GAAY;EACjBjB,KAAK,EAAEL,SAAS,CAACuB,OAAV,CAAkBvB,SAAS,CAACwB,MAA5B,EAAoCC,UAD1B;EAEjBnB,SAAS,EAAEN,SAAS,CAAC0B,IAFJ;EAGjBnB,YAAY,EAAEP,SAAS,CAAC0B;AAHP,C"},"metadata":{},"sourceType":"module"}